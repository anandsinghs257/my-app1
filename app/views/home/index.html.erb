
<%= form_for :shop_search, url: :shop_search_result, method: :get do |f| %>  
<%= f.select :kms, (['5','10','25','75','100']) %>

            <%= f.text_field :location, class: "form-control input-lg", "aria-describedby" => "basic-addon2", id: "autocomplete", placeholder: "Search shops by location",
             onFocus: "geolocate()" %>
            <%= f.hidden_field :latitude, id: :shop_latitude %>
            <%= f.hidden_field :longitude, id: :shop_longitude %>
            <div class="input-group-append">
              <%= f.submit "Search", class: "btn btn-primary btn-lg" %>
            </div>
            <% end %>
             <%  @near_by_shops = Shop.near([22.71, 75.85], 50, units: :km) %>

            <% @near_by_shops.each do |shop| %>
            <h1><%= shop.name %></h1>
          <% end %>
            
             <%= link_to "View all shops", shops_path, class: "btn btn-outline-primary btn-lg" %> 

        
<script>
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name',
  };

  function initAutocomplete() {
    autocomplete = new google.maps.places.Autocomplete(
      (document.getElementById('autocomplete')),
        {types: ['geocode']});

    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    var place = autocomplete.getPlace();
    lat = place.geometry.location.lat();
    long = place.geometry.location.lng();
    $("#shop_latitude").val(lat);
    $("#shop_longitude").val(long);

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }
  
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCGG6jVWyZDiUH3DD6YQLxGcmLlP5V6FA&libraries=places&callback=initAutocomplete"
        async defer></script>
<br>
